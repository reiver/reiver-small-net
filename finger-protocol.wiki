wiki/1

§ Finger-Protocol

⸺ by Charles Iliya Krempeaux

The **finger-protocol** is an early Internet-based **social-network**, with its origins in the early 1970s.
Like with a lot of things from the early Internet — the **finger-protocol** is decentralized.

**finger**'ing someone could return:

• personal information,
• contact information,
• references to that person's presence on other parts of the Internet,
• a short biography,
• a journal,
• articles,
• jokes,
• (so called) ASCII art (which could contain non-ASCII characters),
• animations,
• //and more//.

Historically people and even machines were identified by user names at a host name. For example:

``cikrempeaux@reiver.link``

Someone could request information //from// or //about// a **user** at a **host** using one of the historic ``finger`` terminal applications.
On the command-line, a simple finger request could be performed with something like the following:

``finger cikrempeaux@reiver.link``

A finger-protocol server could return anything it wanted.
But the spirit of the finger-protocol is that the output should be **human-legible** first, given what technologies are available at the time (and //programmer-legible// & //machine-legible// second if at all).

Also, being a simple protocol, made creating a simple client often trivial for many.
For example:

``echo '/W cikrempeaux' | nc reiver.link 79``

§§ Small-Net

Nowadays (as the year 2022), the **finger-protocol** is considered a [[small-net]] protocol.

§§ Finger-Protocol Advantages

The **finger-protocol** has a number of advantages:

• the **finger-protocol** is a [[human-legible]] protocol (rather than just a programmer-legible or machine-legible protocol),
• the **finger-protocol** is **simple enough** for even a more //junior// software developer to be able to understand it,
• the **finger-protocol** and its //default// data-format are simple enough for a competent software developer to be able to create a (simple) working client as a weekend project,
• the **finger-protocol** is simple enough for a competent software developer to be able to create a (simple) working server as a weekend project,
• all of a (single) user's content is provided as a **single download**,
• a client could make a request from a server for a user who is //not// (necessarily) local to that server,
• key-value pairs are in a format that is **human-legible**, **programmer-legible**, and **machine-legible**.

§§ Finger-Protocol Disadvantges

The **finger-protocol** also has a number of disadvantages:

• when a client receives a response from a server, it does not know whether it received all the data or not, as, for example, the network connection could have been disconnected prematurely, but there is no way to detect this,
• there is no //tamper detection//,
• there is no way to determine whether the finger (``.plan``) file was actually from the user whose content was requested,
• there is no way to choose privacy,
• the entire finger (``.plan``) file must be download each time, even if the exact same finger (``.plan``) file was previously downloaded,
• identity is strictly tied to an Internet domain,
• there is no official way of segmenting the download (into sub-pages).
